<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	default-lazy-init="false">

	<!--<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">-->
		<!--<property name="brokerURL" value="${jms.url}" />-->
	<!--</bean>-->

	<!--&lt;!&ndash; JMS Queue Connection Factory &ndash;&gt;-->
	<!--<bean id="jmsQueueConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">-->
		<!--<property name="targetConnectionFactory" ref="jmsConnectionFactory" />-->
		<!--<property name="sessionCacheSize">-->
			<!--<value>${app.jms.connectionFactory.sessionCacheSize}</value>-->
		<!--</property>-->
	<!--</bean>-->

	<!--&lt;!&ndash; JMS Destination Resolver &ndash;&gt;-->
	<!--<bean id="jmsDestinationResolver" class="org.springframework.jms.support.destination.DynamicDestinationResolver" />-->

	<!--&lt;!&ndash; JMS Queue Template &ndash;&gt;-->
	<!--<bean id="jmsTemplateSend" class="org.springframework.jms.core.JmsTemplate">-->
		<!--<property name="connectionFactory" ref="jmsQueueConnectionFactory" />-->
		<!--<property name="destinationResolver" ref="jmsDestinationResolver" />-->
		<!--<property name="pubSubDomain" value="false" />-->
	<!--</bean>-->
	<!---->
	<!--&lt;!&ndash; 定义接收者 &ndash;&gt;-->
	<!--<bean id="jmsListener" class="cn.com.yitong.ares.mp.push.JmsListener"></bean>-->

	<!--&lt;!&ndash; 定义发送者 &ndash;&gt;-->
	<!--<bean id="jmsSender" class="cn.com.yitong.ares.mp.push.JmsSender"></bean>-->

	<!--&lt;!&ndash; 接受监听 &ndash;&gt;-->
	<!--<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
		<!--<property name="connectionFactory" ref="jmsQueueConnectionFactory" />-->
		<!--<property name="destinationResolver" ref="jmsDestinationResolver" />-->
		<!--<property name="messageListener" ref="jmsListener" />-->
		<!--<property name="cacheLevelName" value="CACHE_CONSUMER" />-->
		<!--<property name="taskExecutor" ref="jmsListenerTaskExecutor" />-->
		<!--<property name="concurrentConsumers">-->
			<!--<value>${app.jms.listenerContainer.concurrentConsumers}</value>-->
		<!--</property>-->
		<!--<property name="maxConcurrentConsumers">-->
			<!--<value>${app.jms.listenerContainer.maxConcurrentConsumers}</value>-->
		<!--</property>-->
		<!--<property name="destinationName">-->
			<!--<value>${app.jms.listenerContainer.destinationName}</value>-->
		<!--</property>-->
	<!--</bean>-->


	<!--&lt;!&ndash; <context:component-scan base-package="com.yitong,cn.com.yitong">-->
		<!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />-->
	<!--</context:component-scan> &ndash;&gt;-->
	<!--&lt;!&ndash; 消息推送线程池 &ndash;&gt;-->
	<!--<bean id="pushMessageExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">-->
		<!--&lt;!&ndash; 核心线程数，默认为1 &ndash;&gt;-->
		<!--<property name="corePoolSize">-->
			<!--<value>${app.pushMessageExecutor.corePoolSize}</value>-->
		<!--</property>-->
		<!--&lt;!&ndash; 最大线程数，默认为Integer.MAX_VALUE &ndash;&gt;-->
		<!--<property name="maxPoolSize">-->
			<!--<value>${app.pushMessageExecutor.maxPoolSize}</value>-->
		<!--</property>-->
		<!--&lt;!&ndash; 队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE &ndash;&gt;-->
		<!--<property name="queueCapacity">-->
			<!--<value>${app.pushMessageExecutor.queueCapacity}</value>-->
		<!--</property>-->
		<!--&lt;!&ndash; 线程池维护线程所允许的空闲时间，默认为60s &ndash;&gt;-->
		<!--<property name="keepAliveSeconds">-->
			<!--<value>${app.pushMessageExecutor.keepAliveSeconds}</value>-->
		<!--</property>-->
		<!--&lt;!&ndash; 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 &ndash;&gt;-->
		<!--<property name="rejectedExecutionHandler">-->
			<!--&lt;!&ndash; AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 &ndash;&gt;-->
			<!--&lt;!&ndash; CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 &ndash;&gt;-->
			<!--&lt;!&ndash; DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 &ndash;&gt;-->
			<!--&lt;!&ndash; DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 &ndash;&gt;-->
			<!--<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />-->
		<!--</property>-->
		<!--<property name="threadNamePrefix" value="pushMessageExecutor" />-->
	<!--</bean>-->

	<!--&lt;!&ndash; jms发送线程池 &ndash;&gt;-->
	<!--<bean id="threadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">-->
		<!--<property name="corePoolSize">-->
			<!--<value>${app.jmsSenderExecutor.corePoolSize}</value>-->
		<!--</property>-->
		<!--<property name="maxPoolSize">-->
			<!--<value>${app.jmsSenderExecutor.maxPoolSize}</value>-->
		<!--</property>-->
		<!--<property name="keepAliveSeconds">-->
			<!--<value>${app.jmsSenderExecutor.keepAliveSeconds}</value>-->
		<!--</property>-->
		<!--<property name="queueCapacity">-->
			<!--<value>${app.jmsSenderExecutor.queueCapacity}</value>-->
		<!--</property>-->
		<!--<property name="threadNamePrefix" value="jmsSenderTaskExecutor" />-->
	<!--</bean>-->

	<!--&lt;!&ndash; jms监听线程池 &ndash;&gt;-->
	<!--<bean id="jmsListenerTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">-->
		<!--<property name="corePoolSize">-->
			<!--<value>${app.jmsListenerExecutor.corePoolSize}</value>-->
		<!--</property>-->
		<!--<property name="maxPoolSize">-->
			<!--<value>${app.jmsListenerExecutor.maxPoolSize}</value>-->
		<!--</property>-->
		<!--<property name="keepAliveSeconds">-->
			<!--<value>${app.jmsListenerExecutor.keepAliveSeconds}</value>-->
		<!--</property>-->
		<!--<property name="queueCapacity">-->
			<!--<value>${app.jmsListenerExecutor.queueCapacity}</value>-->
		<!--</property>-->
		<!--<property name="threadNamePrefix" value="jmsListenerTaskExecutor" />-->
	<!--</bean>-->
</beans>