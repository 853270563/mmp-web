<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/cache 
      http://www.springframework.org/schema/cache/spring-cache-3.2.xsd">

	<bean id="cacheManagerSimple" class="cn.com.yitong.core.cache.CacheManagerFactoryBean"></bean>
	<!-- 缓存配置 -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:${ehcache.configFile}" />
	</bean>

	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="cacheManager"/>
	</bean>
	<!--
	redis配置实例-单节点(REDIS配置选择一)：
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${jedis.hostName}" />
		<property name="port" value="${jedis.port}" />
		<property name="usePool" value="${jedis.userPool}" />
	</bean>
            
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>
	-->
	<!-- redis配置实例-sentinel配置 (REDIS配置选择二) -->
	<!--<bean id="redisSentinelConfiguration"-->
        <!--class="org.springframework.data.redis.connection.RedisSentinelConfiguration">-->
        <!--<property name="master">-->
            <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                <!--<property name="name" value="mymaster"></property>-->
            <!--</bean>-->
        <!--</property>-->
        <!--<property name="sentinels">-->
            <!--<set>-->
                <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                    <!--<constructor-arg name="host" value="192.168.1.241"></constructor-arg>-->
					<!--<constructor-arg name="port" value="26379"></constructor-arg>-->
                <!--</bean>-->
                <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                    <!--<constructor-arg name="host" value="192.168.1.11"/>-->
                    <!--<constructor-arg name="port" value="26379"/>-->
                <!--</bean>-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean id="jedisConnectionFactory"-->
		<!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
      <!--<constructor-arg ref="redisSentinelConfiguration"/>-->
    <!--</bean>-->
	<!--<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" >-->
		<!--<property name="connectionFactory" ref="jedisConnectionFactory" />-->
 		<!--<property name="keySerializer">-->
             <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
        <!--</property>-->
 		<!--<property name="valueSerializer">-->
             <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />-->
       	<!--</property>-->
	<!--</bean>-->
</beans>